{"version":3,"file":"vue-mention.umd.js","sources":["../../../node_modules/textarea-caret/index.js","../src/Mentionable.vue","../src/index.js"],"sourcesContent":["/* jshint browser: true */\n\n(function () {\n\n// We'll copy the properties below into the mirror div.\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nvar properties = [\n  'direction',  // RTL support\n  'boxSizing',\n  'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n  'height',\n  'overflowX',\n  'overflowY',  // copy the scrollbar for IE\n\n  'borderTopWidth',\n  'borderRightWidth',\n  'borderBottomWidth',\n  'borderLeftWidth',\n  'borderStyle',\n\n  'paddingTop',\n  'paddingRight',\n  'paddingBottom',\n  'paddingLeft',\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n  'fontStyle',\n  'fontVariant',\n  'fontWeight',\n  'fontStretch',\n  'fontSize',\n  'fontSizeAdjust',\n  'lineHeight',\n  'fontFamily',\n\n  'textAlign',\n  'textTransform',\n  'textIndent',\n  'textDecoration',  // might not make a difference, but better be safe\n\n  'letterSpacing',\n  'wordSpacing',\n\n  'tabSize',\n  'MozTabSize'\n\n];\n\nvar isBrowser = (typeof window !== 'undefined');\nvar isFirefox = (isBrowser && window.mozInnerScreenX != null);\n\nfunction getCaretCoordinates(element, position, options) {\n  if (!isBrowser) {\n    throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\n  }\n\n  var debug = options && options.debug || false;\n  if (debug) {\n    var el = document.querySelector('#input-textarea-caret-position-mirror-div');\n    if (el) el.parentNode.removeChild(el);\n  }\n\n  // The mirror div will replicate the textarea's style\n  var div = document.createElement('div');\n  div.id = 'input-textarea-caret-position-mirror-div';\n  document.body.appendChild(div);\n\n  var style = div.style;\n  var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\n  var isInput = element.nodeName === 'INPUT';\n\n  // Default textarea styles\n  style.whiteSpace = 'pre-wrap';\n  if (!isInput)\n    style.wordWrap = 'break-word';  // only for textarea-s\n\n  // Position off-screen\n  style.position = 'absolute';  // required to return coordinates properly\n  if (!debug)\n    style.visibility = 'hidden';  // not 'display: none' because we want rendering\n\n  // Transfer the element's properties to the div\n  properties.forEach(function (prop) {\n    if (isInput && prop === 'lineHeight') {\n      // Special case for <input>s because text is rendered centered and line height may be != height\n      style.lineHeight = computed.height;\n    } else {\n      style[prop] = computed[prop];\n    }\n  });\n\n  if (isFirefox) {\n    // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n    if (element.scrollHeight > parseInt(computed.height))\n      style.overflowY = 'scroll';\n  } else {\n    style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n  }\n\n  div.textContent = element.value.substring(0, position);\n  // The second special handling for input type=\"text\" vs textarea:\n  // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n  if (isInput)\n    div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n\n  var span = document.createElement('span');\n  // Wrapping must be replicated *exactly*, including when a long word gets\n  // onto the next line, with whitespace at the end of the line before (#7).\n  // The  *only* reliable way to do that is to copy the *entire* rest of the\n  // textarea's content into the <span> created at the caret position.\n  // For inputs, just '.' would be enough, but no need to bother.\n  span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n  div.appendChild(span);\n\n  var coordinates = {\n    top: span.offsetTop + parseInt(computed['borderTopWidth']),\n    left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\n    height: parseInt(computed['lineHeight'])\n  };\n\n  if (debug) {\n    span.style.backgroundColor = '#aaa';\n  } else {\n    document.body.removeChild(div);\n  }\n\n  return coordinates;\n}\n\nif (typeof module != 'undefined' && typeof module.exports != 'undefined') {\n  module.exports = getCaretCoordinates;\n} else if(isBrowser) {\n  window.getCaretCoordinates = getCaretCoordinates;\n}\n\n}());\n","<script>\r\nimport getCaretPosition from 'textarea-caret'\r\nimport { VPopover } from 'v-tooltip'\r\n\r\nconst userAgent = typeof window !== 'undefined' ? window.navigator.userAgent : ''\r\nconst isIe = userAgent.indexOf('MSIE ') !== -1 || userAgent.indexOf('Trident/') !== -1\r\n\r\nexport default {\r\n  components: {\r\n    VPopover,\r\n  },\r\n\r\n  inheritAttrs: false,\r\n\r\n  props: {\r\n    keys: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n\r\n    placement: {\r\n      type: String,\r\n      default: 'top-start',\r\n    },\r\n\r\n    items: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n\r\n    omitKey: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    filteringDisabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    insertSpace: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    mapInsert: {\r\n      type: Function,\r\n      default: null,\r\n    },\r\n\r\n    limit: {\r\n      type: Number,\r\n      default: 8,\r\n    },\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      key: null,\r\n      oldKey: null,\r\n      searchText: null,\r\n      caretPosition: null,\r\n      selectedIndex: 0,\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    filteredItems () {\r\n      if (!this.searchText || this.filteringDisabled) {\r\n        return this.items\r\n      }\r\n\r\n      const searchText = this.searchText.toLowerCase()\r\n\r\n      return this.items.filter(item => {\r\n        /** @type {string} */\r\n        let text\r\n        if (item.searchText) {\r\n          text = item.searchText\r\n        } else if (item.label) {\r\n          text = item.label\r\n        } else {\r\n          text = ''\r\n          for (const key in item) {\r\n            text += item[key]\r\n          }\r\n        }\r\n        return text.toLowerCase().includes(searchText)\r\n      })\r\n    },\r\n\r\n    displayedItems () {\r\n      return this.filteredItems.slice(0, this.limit)\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    displayedItems () {\r\n      this.selectedIndex = 0\r\n    },\r\n\r\n    searchText (value, oldValue) {\r\n      if (value) {\r\n        this.$emit('search', value, oldValue)\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted () {\r\n    this.input = this.getInput()\r\n    this.attach()\r\n  },\r\n\r\n  updated () {\r\n    const input = this.getInput()\r\n    if (input !== this.input) {\r\n      this.detach()\r\n      this.input = input\r\n      this.attach()\r\n    }\r\n  },\r\n\r\n  beforeDestroy () {\r\n    this.detach()\r\n  },\r\n\r\n  methods: {\r\n    getInput () {\r\n      const [vnode] = this.$scopedSlots.default()\r\n      if (vnode) {\r\n        if (vnode.elm.tagName === 'INPUT' || vnode.elm.tagName === 'TEXTAREA' || vnode.elm.isContentEditable) {\r\n          return vnode.elm\r\n        } else {\r\n          return vnode.elm.querySelector('input') || vnode.elm.querySelector('textarea') || vnode.elm.querySelector('[contenteditable=\"true\"]')\r\n        }\r\n      }\r\n      return null\r\n    },\r\n\r\n    attach () {\r\n      if (this.input) {\r\n        this.input.addEventListener('input', this.onInput)\r\n        this.input.addEventListener('keydown', this.onKeyDown)\r\n        this.input.addEventListener('keyup', this.onKeyUp)\r\n        this.input.addEventListener('scroll', this.onScroll)\r\n        this.input.addEventListener('blur', this.onBlur)\r\n      }\r\n    },\r\n\r\n    detach () {\r\n      if (this.input) {\r\n        this.input.removeEventListener('input', this.onInput)\r\n        this.input.removeEventListener('keydown', this.onKeyDown)\r\n        this.input.removeEventListener('keyup', this.onKeyUp)\r\n        this.input.removeEventListener('scroll', this.onScroll)\r\n        this.input.removeEventListener('blur', this.onBlur)\r\n      }\r\n    },\r\n\r\n    onInput () {\r\n      this.checkKey()\r\n    },\r\n\r\n    onBlur () {\r\n      this.closeMenu()\r\n    },\r\n\r\n    onKeyDown (e) {\r\n      if (this.key) {\r\n        if (e.key === 'ArrowDown' || e.keyCode === 40) {\r\n          this.selectedIndex++\r\n          if (this.selectedIndex >= this.displayedItems.length) {\r\n            this.selectedIndex = 0\r\n          }\r\n          this.cancelEvent(e)\r\n        }\r\n        if (e.key === 'ArrowUp' || e.keyCode === 38) {\r\n          this.selectedIndex--\r\n          if (this.selectedIndex < 0) {\r\n            this.selectedIndex = this.displayedItems.length - 1\r\n          }\r\n          this.cancelEvent(e)\r\n        }\r\n        if ((e.key === 'Enter' || e.key === 'Tab' || e.keyCode === 13 || e.keyCode === 9) &&\r\n          this.displayedItems.length > 0) {\r\n          this.applyMention(this.selectedIndex)\r\n          this.cancelEvent(e)\r\n        }\r\n        if (e.key === 'Escape' || e.keyCode === 27) {\r\n          this.closeMenu()\r\n          this.cancelEvent(e)\r\n        }\r\n      }\r\n    },\r\n\r\n    onKeyUp (e) {\r\n      if (this.cancelKeyUp && (e.key === this.cancelKeyUp || e.keyCode === this.cancelKeyCode)) {\r\n        this.cancelEvent(e)\r\n      }\r\n      this.cancelKeyUp = null\r\n      // IE\r\n      this.cancelKeyCode = null\r\n    },\r\n\r\n    cancelEvent (e) {\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n      this.cancelKeyUp = e.key\r\n      // IE\r\n      this.cancelKeyCode = e.keyCode\r\n    },\r\n\r\n    onScroll () {\r\n      this.updateCaretPosition()\r\n    },\r\n\r\n    getSelectionStart () {\r\n      return this.input.isContentEditable ? window.getSelection().anchorOffset : this.input.selectionStart\r\n    },\r\n\r\n    setCaretPosition (index) {\r\n      this.$nextTick(() => {\r\n        this.input.selectionEnd = index\r\n      })\r\n    },\r\n\r\n    getValue () {\r\n      if (this.input.isContentEditable) {\r\n        const node = window.getSelection().anchorNode\r\n        if (!node.children) {\r\n          return node.textContent\r\n        }\r\n        return ''\r\n      }\r\n      return this.input.value\r\n    },\r\n\r\n    setValue (value) {\r\n      this.input.value = value\r\n      this.emitInputEvent('input')\r\n    },\r\n\r\n    emitInputEvent (type) {\r\n      let event\r\n      if (isIe) {\r\n        event = document.createEvent('Event')\r\n        event.initEvent(type, true, true)\r\n      } else {\r\n        event = new Event(type)\r\n      }\r\n      this.input.dispatchEvent(event)\r\n    },\r\n\r\n    checkKey () {\r\n      const index = this.getSelectionStart()\r\n      if (index >= 0) {\r\n        const { key, keyIndex } = this.getLastKeyBeforeCaret(index)\r\n        const searchText = this.lastSearchText = this.getLastSearchText(index, keyIndex)\r\n        if (!(keyIndex < 1 || /\\s/.test(this.getValue()[keyIndex - 1]))) {\r\n          return false\r\n        }\r\n        if (searchText != null) {\r\n          this.openMenu(key, keyIndex)\r\n          this.searchText = searchText\r\n          return true\r\n        }\r\n      }\r\n      this.closeMenu()\r\n      return false\r\n    },\r\n\r\n    getLastKeyBeforeCaret (caretIndex) {\r\n      const [keyData] = this.keys.map(key => ({\r\n        key,\r\n        keyIndex: this.getValue().lastIndexOf(key, caretIndex - 1),\r\n      })).sort((a, b) => b.keyIndex - a.keyIndex)\r\n      return keyData\r\n    },\r\n\r\n    getLastSearchText (caretIndex, keyIndex) {\r\n      if (keyIndex !== -1) {\r\n        const searchText = this.getValue().substring(keyIndex + 1, caretIndex)\r\n        // If there is a space we close the menu\r\n        if (!/\\s/.test(searchText)) {\r\n          return searchText\r\n        }\r\n      }\r\n      return null\r\n    },\r\n\r\n    openMenu (key, keyIndex) {\r\n      if (this.key !== key) {\r\n        this.key = key\r\n        this.keyIndex = keyIndex\r\n        this.updateCaretPosition()\r\n        this.selectedIndex = 0\r\n        this.$emit('open', key)\r\n      }\r\n    },\r\n\r\n    closeMenu () {\r\n      if (this.key != null) {\r\n        this.oldKey = this.key\r\n        this.key = null\r\n        this.$emit('close', this.oldKey)\r\n      }\r\n    },\r\n\r\n    updateCaretPosition () {\r\n      if (this.key) {\r\n        if (this.input.isContentEditable) {\r\n          const rect = window.getSelection().getRangeAt(0).getBoundingClientRect()\r\n          const inputRect = this.input.getBoundingClientRect()\r\n          this.caretPosition = {\r\n            left: rect.left - inputRect.left,\r\n            top: rect.top - inputRect.top,\r\n            height: rect.height,\r\n          }\r\n        } else {\r\n          this.caretPosition = getCaretPosition(this.input, this.keyIndex)\r\n        }\r\n        this.caretPosition.top -= this.input.scrollTop\r\n        if (this.$refs.popper && this.$refs.popper.popperInstance) {\r\n          this.$refs.popper.popperInstance.scheduleUpdate()\r\n        }\r\n      }\r\n    },\r\n\r\n    applyMention (itemIndex) {\r\n      const item = this.displayedItems[itemIndex]\r\n      const value = (this.omitKey ? '' : this.key) + String(this.mapInsert ? this.mapInsert(item, this.key) : item.value) + (this.insertSpace ? ' ' : '')\r\n      if (this.input.isContentEditable) {\r\n        const range = window.getSelection().getRangeAt(0)\r\n        range.setStart(range.startContainer, range.startOffset - this.key.length - (this.lastSearchText ? this.lastSearchText.length : 0))\r\n        range.deleteContents()\r\n        range.insertNode(document.createTextNode(value))\r\n        range.setStart(range.endContainer, range.endOffset)\r\n        this.emitInputEvent('input')\r\n      } else {\r\n        this.setValue(this.replaceText(this.getValue(), this.searchText, value, this.keyIndex))\r\n        this.setCaretPosition(this.keyIndex + value.length)\r\n      }\r\n      this.$emit('apply', item, this.key, value)\r\n      this.closeMenu()\r\n    },\r\n\r\n    replaceText (text, searchText, newText, index) {\r\n      return text.slice(0, index) + newText + text.slice(index + searchText.length + 1, text.length)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    class=\"mentionable\"\r\n    style=\"position:relative;\"\r\n  >\r\n    <slot />\r\n\r\n    <VPopover\r\n      ref=\"popper\"\r\n      v-bind=\"$attrs\"\r\n      :placement=\"placement\"\r\n      :open=\"!!key\"\r\n      trigger=\"manual\"\r\n      :auto-hide=\"false\"\r\n      class=\"popper\"\r\n      style=\"position:absolute;\"\r\n      :style=\"caretPosition ? {\r\n        top: `${caretPosition.top}px`,\r\n        left: `${caretPosition.left}px`,\r\n      } : {}\"\r\n    >\r\n      <div\r\n        :style=\"caretPosition ? {\r\n          height: `${caretPosition.height}px`,\r\n        } : {}\"\r\n      />\r\n\r\n      <template #popover>\r\n        <div v-if=\"!displayedItems.length\">\r\n          <slot name=\"no-result\">\r\n            No result\r\n          </slot>\r\n        </div>\r\n\r\n        <template v-else>\r\n          <div\r\n            v-for=\"(item, index) of displayedItems\"\r\n            :key=\"index\"\r\n            class=\"mention-item\"\r\n            :class=\"{\r\n              'mention-selected': selectedIndex === index,\r\n            }\"\r\n            @mouseover=\"selectedIndex = index\"\r\n            @mousedown=\"applyMention(index)\"\r\n          >\r\n            <slot\r\n              :name=\"`item-${key || oldKey}`\"\r\n              :item=\"item\"\r\n              :index=\"index\"\r\n            >\r\n              <slot\r\n                name=\"item\"\r\n                :item=\"item\"\r\n                :index=\"index\"\r\n              >\r\n                {{ item.label || item.value }}\r\n              </slot>\r\n            </slot>\r\n          </div>\r\n        </template>\r\n      </template>\r\n    </VPopover>\r\n  </div>\r\n</template>\r\n","import Mentionable from './Mentionable.vue'\r\n\r\nexport {\r\n  Mentionable,\r\n}\r\n\r\nfunction registerComponents (Vue, prefix) {\r\n  Vue.component(`${prefix}mentionable`, Mentionable)\r\n  Vue.component(`${prefix}Mentionable`, Mentionable)\r\n}\r\n\r\nconst plugin = {\r\n  // eslint-disable-next-line no-undef\r\n  version: VERSION,\r\n  install (Vue, options) {\r\n    const finalOptions = Object.assign({}, {\r\n      installComponents: true,\r\n      componentsPrefix: '',\r\n    }, options)\r\n\r\n    if (finalOptions.installComponents) {\r\n      registerComponents(Vue, finalOptions.componentsPrefix)\r\n    }\r\n  },\r\n}\r\n\r\nexport default plugin\r\n\r\n// Auto-install\r\nlet GlobalVue = null\r\nif (typeof window !== 'undefined') {\r\n  GlobalVue = window.Vue\r\n} else if (typeof global !== 'undefined') {\r\n  GlobalVue = global.Vue\r\n}\r\nif (GlobalVue) {\r\n  GlobalVue.use(plugin)\r\n}\r\n"],"names":["properties","isBrowser","window","isFirefox","mozInnerScreenX","getCaretCoordinates","element","position","options","Error","debug","el","document","querySelector","parentNode","removeChild","div","createElement","id","body","appendChild","style","computed","getComputedStyle","currentStyle","isInput","nodeName","whiteSpace","wordWrap","visibility","forEach","prop","lineHeight","height","scrollHeight","parseInt","overflowY","overflow","textContent","value","substring","replace","span","coordinates","top","offsetTop","left","offsetLeft","backgroundColor","module","registerComponents","Vue","prefix","component","Mentionable","plugin","version","VERSION","install","finalOptions","Object","assign","installComponents","componentsPrefix","GlobalVue","global","use"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EAEC,aAAY;EAEb;EACA;EACA;EACA;EACA,MAAIA,UAAU,GAAG,CACf,WADe;EAEf,aAFe,EAGf,OAHe;EAIf,UAJe,EAKf,WALe,EAMf,WANe;EAQf,kBARe,EASf,kBATe,EAUf,mBAVe,EAWf,iBAXe,EAYf,aAZe,EAcf,YAde,EAef,cAfe,EAgBf,eAhBe,EAiBf,aAjBe;EAoBf,aApBe,EAqBf,aArBe,EAsBf,YAtBe,EAuBf,aAvBe,EAwBf,UAxBe,EAyBf,gBAzBe,EA0Bf,YA1Be,EA2Bf,YA3Be,EA6Bf,WA7Be,EA8Bf,eA9Be,EA+Bf,YA/Be,EAgCf,gBAhCe;EAkCf,iBAlCe,EAmCf,aAnCe,EAqCf,SArCe,EAsCf,YAtCe,CAAjB;EA0CA,MAAIC,SAAS,GAAI,OAAOC,MAAP,KAAkB,WAAnC;EACA,MAAIC,SAAS,GAAIF,SAAS,IAAIC,MAAM,CAACE,eAAP,IAA0B,IAAxD;;EAEA,WAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyD;EACvD,QAAI,CAACP,SAAL,EAAgB;EACd,YAAM,IAAIQ,KAAJ,CAAU,gFAAV,CAAN;EACD;;EAED,QAAIC,KAAK,GAAGF,OAAO,IAAIA,OAAO,CAACE,KAAnB,IAA4B,KAAxC;;EACA,QAAIA,KAAJ,EAAW;EACT,UAAIC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,2CAAvB,CAAT;EACA,UAAIF,EAAJ,EAAQA,EAAE,CAACG,UAAH,CAAcC,WAAd,CAA0BJ,EAA1B;EACT,KATsD;;;EAYvD,QAAIK,GAAG,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAV;EACAD,IAAAA,GAAG,CAACE,EAAJ,GAAS,0CAAT;EACAN,IAAAA,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BJ,GAA1B;EAEA,QAAIK,KAAK,GAAGL,GAAG,CAACK,KAAhB;EACA,QAAIC,QAAQ,GAAGpB,MAAM,CAACqB,gBAAP,GAA0BrB,MAAM,CAACqB,gBAAP,CAAwBjB,OAAxB,CAA1B,GAA6DA,OAAO,CAACkB,YAApF,CAjBuD;;EAkBvD,QAAIC,OAAO,GAAGnB,OAAO,CAACoB,QAAR,KAAqB,OAAnC,CAlBuD;;EAqBvDL,IAAAA,KAAK,CAACM,UAAN,GAAmB,UAAnB;EACA,QAAI,CAACF,OAAL,EACEJ,KAAK,CAACO,QAAN,GAAiB,YAAjB,CAvBqD;EAyBvD;;EACAP,IAAAA,KAAK,CAACd,QAAN,GAAiB,UAAjB,CA1BuD;;EA2BvD,QAAI,CAACG,KAAL,EACEW,KAAK,CAACQ,UAAN,GAAmB,QAAnB,CA5BqD;EA8BvD;;EACA7B,IAAAA,UAAU,CAAC8B,OAAX,CAAmB,UAAUC,IAAV,EAAgB;EACjC,UAAIN,OAAO,IAAIM,IAAI,KAAK,YAAxB,EAAsC;EACpC;EACAV,QAAAA,KAAK,CAACW,UAAN,GAAmBV,QAAQ,CAACW,MAA5B;EACD,OAHD,MAGO;EACLZ,QAAAA,KAAK,CAACU,IAAD,CAAL,GAAcT,QAAQ,CAACS,IAAD,CAAtB;EACD;EACF,KAPD;;EASA,QAAI5B,SAAJ,EAAe;EACb;EACA,UAAIG,OAAO,CAAC4B,YAAR,GAAuBC,QAAQ,CAACb,QAAQ,CAACW,MAAV,CAAnC,EACEZ,KAAK,CAACe,SAAN,GAAkB,QAAlB;EACH,KAJD,MAIO;EACLf,MAAAA,KAAK,CAACgB,QAAN,GAAiB,QAAjB,CADK;EAEN;;EAEDrB,IAAAA,GAAG,CAACsB,WAAJ,GAAkBhC,OAAO,CAACiC,KAAR,CAAcC,SAAd,CAAwB,CAAxB,EAA2BjC,QAA3B,CAAlB,CAhDuD;EAkDvD;;EACA,QAAIkB,OAAJ,EACET,GAAG,CAACsB,WAAJ,GAAkBtB,GAAG,CAACsB,WAAJ,CAAgBG,OAAhB,CAAwB,KAAxB,EAA+B,MAA/B,CAAlB;EAEF,QAAIC,IAAI,GAAG9B,QAAQ,CAACK,aAAT,CAAuB,MAAvB,CAAX,CAtDuD;EAwDvD;EACA;EACA;EACA;;EACAyB,IAAAA,IAAI,CAACJ,WAAL,GAAmBhC,OAAO,CAACiC,KAAR,CAAcC,SAAd,CAAwBjC,QAAxB,KAAqC,GAAxD,CA5DuD;;EA6DvDS,IAAAA,GAAG,CAACI,WAAJ,CAAgBsB,IAAhB;EAEA,QAAIC,WAAW,GAAG;EAChBC,MAAAA,GAAG,EAAEF,IAAI,CAACG,SAAL,GAAiBV,QAAQ,CAACb,QAAQ,CAAC,gBAAD,CAAT,CADd;EAEhBwB,MAAAA,IAAI,EAAEJ,IAAI,CAACK,UAAL,GAAkBZ,QAAQ,CAACb,QAAQ,CAAC,iBAAD,CAAT,CAFhB;EAGhBW,MAAAA,MAAM,EAAEE,QAAQ,CAACb,QAAQ,CAAC,YAAD,CAAT;EAHA,KAAlB;;EAMA,QAAIZ,KAAJ,EAAW;EACTgC,MAAAA,IAAI,CAACrB,KAAL,CAAW2B,eAAX,GAA6B,MAA7B;EACD,KAFD,MAEO;EACLpC,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,WAAd,CAA0BC,GAA1B;EACD;;EAED,WAAO2B,WAAP;EACD;;EAED,EAA0E;EACxEM,IAAAA,cAAA,GAAiB5C,mBAAjB;EACD;EAIA,CAvIA,GAAD;;;ECEA,+EAAA;EACA,okBAAT,CAA6BC,GAA7B,EAAkCC,MAAlC,EAA0C;EACxCD,EAAAA,GAAG,CAACE,SAAJ,WAAiBD,MAAjB,kBAAsCE,iBAAtC;EACAH,EAAAA,GAAG,CAACE,SAAJ,WAAiBD,MAAjB,kBAAsCE,iBAAtC;EACD;;MAEKC,MAAM,GAAG;EACb;EACAC,EAAAA,OAAO,EAAEC,OAFI;EAGbC,EAAAA,OAHa,mBAGJP,GAHI,EAGC3C,OAHD,EAGU;EACrB,QAAMmD,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;EACrCC,MAAAA,iBAAiB,EAAE,IADkB;EAErCC,MAAAA,gBAAgB,EAAE;EAFmB,KAAlB,EAGlBvD,OAHkB,CAArB;;EAKA,QAAImD,YAAY,CAACG,iBAAjB,EAAoC;EAClCZ,MAAAA,kBAAkB,CAACC,GAAD,EAAMQ,YAAY,CAACI,gBAAnB,CAAlB;EACD;EACF;EAZY;;EAkBf,IAAIC,SAAS,GAAG,IAAhB;;EACA,IAAI,OAAO9D,MAAP,KAAkB,WAAtB,EAAmC;EACjC8D,EAAAA,SAAS,GAAG9D,MAAM,CAACiD,GAAnB;EACD,CAFD,MAEO,IAAI,OAAOc,MAAP,KAAkB,WAAtB,EAAmC;EACxCD,EAAAA,SAAS,GAAGC,MAAM,CAACd,GAAnB;EACD;;EACD,IAAIa,SAAJ,EAAe;EACbA,EAAAA,SAAS,CAACE,GAAV,CAAcX,MAAd;EACD;;;;;;;;;;;"}